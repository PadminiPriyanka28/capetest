{"ast":null,"code":"import axios from 'axios';\nimport { API_BASE_URL } from './config';\n\n// Create axios instance with base URL\nconst api = axios.create({\n  baseURL: API_BASE_URL,\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\n\n// User API service\nconst userService = {\n  // Authentication\n  login: async credentials => {\n    try {\n      const response = await api.post('/auth/login', credentials);\n      return response.data;\n    } catch (error) {\n      console.error('Login error:', error);\n      throw error;\n    }\n  },\n  register: async userData => {\n    try {\n      const response = await api.post('/auth/register', userData);\n      return response.data;\n    } catch (error) {\n      console.error('Registration error:', error);\n      throw error;\n    }\n  },\n  // Get all users\n  getAllUsers: async () => {\n    try {\n      const response = await api.get('/users');\n      return response.data;\n    } catch (error) {\n      console.error('Error fetching users:', error);\n      throw error;\n    }\n  },\n  // Get user by ID\n  getUserById: async id => {\n    try {\n      const response = await api.get(`/users/${id}`);\n      return response.data;\n    } catch (error) {\n      console.error(`Error fetching user with ID ${id}:`, error);\n      throw error;\n    }\n  },\n  // Create a new user\n  createUser: async userData => {\n    try {\n      const response = await api.post('/users', userData);\n      return response.data;\n    } catch (error) {\n      console.error('Error creating user:', error);\n      throw error;\n    }\n  },\n  // Update an existing user\n  updateUser: async (id, userData) => {\n    try {\n      const response = await api.put(`/users/${id}`, userData);\n      return response.data;\n    } catch (error) {\n      console.error(`Error updating user with ID ${id}:`, error);\n      throw error;\n    }\n  },\n  // Delete a user\n  deleteUser: async id => {\n    try {\n      const response = await api.delete(`/users/${id}`);\n      return response.data;\n    } catch (error) {\n      console.error(`Error deleting user with ID ${id}:`, error);\n      throw error;\n    }\n  }\n};\nexport default userService;","map":{"version":3,"names":["axios","API_BASE_URL","api","create","baseURL","headers","userService","login","credentials","response","post","data","error","console","register","userData","getAllUsers","get","getUserById","id","createUser","updateUser","put","deleteUser","delete"],"sources":["C:/Users/marti/Downloads/user-management-system-main/user-management-system-main/frontend/src/api/userService.js"],"sourcesContent":["import axios from 'axios';\r\nimport { API_BASE_URL } from './config';\r\n\r\n// Create axios instance with base URL\r\nconst api = axios.create({\r\n  baseURL: API_BASE_URL,\r\n  headers: {\r\n    'Content-Type': 'application/json',\r\n  },\r\n});\r\n\r\n// User API service\r\nconst userService = {\r\n  // Authentication\r\n  login: async (credentials) => {\r\n    try {\r\n      const response = await api.post('/auth/login', credentials);\r\n      return response.data;\r\n    } catch (error) {\r\n      console.error('Login error:', error);\r\n      throw error;\r\n    }\r\n  },\r\n\r\n  register: async (userData) => {\r\n    try {\r\n      const response = await api.post('/auth/register', userData);\r\n      return response.data;\r\n    } catch (error) {\r\n      console.error('Registration error:', error);\r\n      throw error;\r\n    }\r\n  },\r\n\r\n  // Get all users\r\n  getAllUsers: async () => {\r\n    try {\r\n      const response = await api.get('/users');\r\n      return response.data;\r\n    } catch (error) {\r\n      console.error('Error fetching users:', error);\r\n      throw error;\r\n    }\r\n  },\r\n\r\n  // Get user by ID\r\n  getUserById: async (id) => {\r\n    try {\r\n      const response = await api.get(`/users/${id}`);\r\n      return response.data;\r\n    } catch (error) {\r\n      console.error(`Error fetching user with ID ${id}:`, error);\r\n      throw error;\r\n    }\r\n  },\r\n\r\n  // Create a new user\r\n  createUser: async (userData) => {\r\n    try {\r\n      const response = await api.post('/users', userData);\r\n      return response.data;\r\n    } catch (error) {\r\n      console.error('Error creating user:', error);\r\n      throw error;\r\n    }\r\n  },\r\n\r\n  // Update an existing user\r\n  updateUser: async (id, userData) => {\r\n    try {\r\n      const response = await api.put(`/users/${id}`, userData);\r\n      return response.data;\r\n    } catch (error) {\r\n      console.error(`Error updating user with ID ${id}:`, error);\r\n      throw error;\r\n    }\r\n  },\r\n\r\n  // Delete a user\r\n  deleteUser: async (id) => {\r\n    try {\r\n      const response = await api.delete(`/users/${id}`);\r\n      return response.data;\r\n    } catch (error) {\r\n      console.error(`Error deleting user with ID ${id}:`, error);\r\n      throw error;\r\n    }\r\n  }\r\n};\r\n\r\nexport default userService; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}