{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\marti\\\\Downloads\\\\user-management-system-main\\\\user-management-system-main\\\\frontend\\\\src\\\\context\\\\AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useState, useEffect, useContext } from 'react';\n\n// Create the context\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AuthContext = /*#__PURE__*/createContext();\n\n// Create a provider component\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [currentUser, setCurrentUser] = useState(null);\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const [isLoading, setIsLoading] = useState(true);\n\n  // Check for existing user on initial load\n  useEffect(() => {\n    const checkLoggedIn = () => {\n      try {\n        const token = localStorage.getItem('token');\n        const user = JSON.parse(localStorage.getItem('user') || 'null');\n        if (token && user) {\n          setCurrentUser(user);\n          setIsAuthenticated(true);\n        }\n      } catch (error) {\n        console.error('Error checking authentication status:', error);\n        // Clear potentially corrupted data\n        localStorage.removeItem('token');\n        localStorage.removeItem('user');\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    checkLoggedIn();\n  }, []);\n\n  // Login function\n  const login = (userData, token) => {\n    localStorage.setItem('token', token);\n    localStorage.setItem('user', JSON.stringify(userData));\n    setCurrentUser(userData);\n    setIsAuthenticated(true);\n  };\n\n  // Logout function\n  const logout = () => {\n    localStorage.removeItem('token');\n    localStorage.removeItem('user');\n    setCurrentUser(null);\n    setIsAuthenticated(false);\n  };\n\n  // Get auth token\n  const getToken = () => {\n    return localStorage.getItem('token');\n  };\n\n  // Context value\n  const value = {\n    currentUser,\n    isAuthenticated,\n    isLoading,\n    login,\n    logout,\n    getToken\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 5\n  }, this);\n};\n\n// Custom hook to use the auth context\n_s(AuthProvider, \"xEP/j9fZUjXdRhiZPTN8EwQKttc=\");\n_c = AuthProvider;\nexport const useAuth = () => {\n  _s2();\n  return useContext(AuthContext);\n};\n_s2(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useState","useEffect","useContext","jsxDEV","_jsxDEV","AuthContext","AuthProvider","children","_s","currentUser","setCurrentUser","isAuthenticated","setIsAuthenticated","isLoading","setIsLoading","checkLoggedIn","token","localStorage","getItem","user","JSON","parse","error","console","removeItem","login","userData","setItem","stringify","logout","getToken","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","useAuth","_s2","$RefreshReg$"],"sources":["C:/Users/marti/Downloads/user-management-system-main/user-management-system-main/frontend/src/context/AuthContext.js"],"sourcesContent":["import React, { createContext, useState, useEffect, useContext } from 'react';\r\n\r\n// Create the context\r\nexport const AuthContext = createContext();\r\n\r\n// Create a provider component\r\nexport const AuthProvider = ({ children }) => {\r\n  const [currentUser, setCurrentUser] = useState(null);\r\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n\r\n  // Check for existing user on initial load\r\n  useEffect(() => {\r\n    const checkLoggedIn = () => {\r\n      try {\r\n        const token = localStorage.getItem('token');\r\n        const user = JSON.parse(localStorage.getItem('user') || 'null');\r\n        \r\n        if (token && user) {\r\n          setCurrentUser(user);\r\n          setIsAuthenticated(true);\r\n        }\r\n      } catch (error) {\r\n        console.error('Error checking authentication status:', error);\r\n        // Clear potentially corrupted data\r\n        localStorage.removeItem('token');\r\n        localStorage.removeItem('user');\r\n      } finally {\r\n        setIsLoading(false);\r\n      }\r\n    };\r\n    \r\n    checkLoggedIn();\r\n  }, []);\r\n\r\n  // Login function\r\n  const login = (userData, token) => {\r\n    localStorage.setItem('token', token);\r\n    localStorage.setItem('user', JSON.stringify(userData));\r\n    setCurrentUser(userData);\r\n    setIsAuthenticated(true);\r\n  };\r\n\r\n  // Logout function\r\n  const logout = () => {\r\n    localStorage.removeItem('token');\r\n    localStorage.removeItem('user');\r\n    setCurrentUser(null);\r\n    setIsAuthenticated(false);\r\n  };\r\n\r\n  // Get auth token\r\n  const getToken = () => {\r\n    return localStorage.getItem('token');\r\n  };\r\n\r\n  // Context value\r\n  const value = {\r\n    currentUser,\r\n    isAuthenticated,\r\n    isLoading,\r\n    login,\r\n    logout,\r\n    getToken\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={value}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n\r\n// Custom hook to use the auth context\r\nexport const useAuth = () => {\r\n  return useContext(AuthContext);\r\n}; "],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,QAAQ,EAAEC,SAAS,EAAEC,UAAU,QAAQ,OAAO;;AAE7E;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,OAAO,MAAMC,WAAW,gBAAGN,aAAa,CAAC,CAAC;;AAE1C;AACA,OAAO,MAAMO,YAAY,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC5C,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;EACpD,MAAM,CAACW,eAAe,EAAEC,kBAAkB,CAAC,GAAGZ,QAAQ,CAAC,KAAK,CAAC;EAC7D,MAAM,CAACa,SAAS,EAAEC,YAAY,CAAC,GAAGd,QAAQ,CAAC,IAAI,CAAC;;EAEhD;EACAC,SAAS,CAAC,MAAM;IACd,MAAMc,aAAa,GAAGA,CAAA,KAAM;MAC1B,IAAI;QACF,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;QAC3C,MAAMC,IAAI,GAAGC,IAAI,CAACC,KAAK,CAACJ,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC,IAAI,MAAM,CAAC;QAE/D,IAAIF,KAAK,IAAIG,IAAI,EAAE;UACjBT,cAAc,CAACS,IAAI,CAAC;UACpBP,kBAAkB,CAAC,IAAI,CAAC;QAC1B;MACF,CAAC,CAAC,OAAOU,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,uCAAuC,EAAEA,KAAK,CAAC;QAC7D;QACAL,YAAY,CAACO,UAAU,CAAC,OAAO,CAAC;QAChCP,YAAY,CAACO,UAAU,CAAC,MAAM,CAAC;MACjC,CAAC,SAAS;QACRV,YAAY,CAAC,KAAK,CAAC;MACrB;IACF,CAAC;IAEDC,aAAa,CAAC,CAAC;EACjB,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA,MAAMU,KAAK,GAAGA,CAACC,QAAQ,EAAEV,KAAK,KAAK;IACjCC,YAAY,CAACU,OAAO,CAAC,OAAO,EAAEX,KAAK,CAAC;IACpCC,YAAY,CAACU,OAAO,CAAC,MAAM,EAAEP,IAAI,CAACQ,SAAS,CAACF,QAAQ,CAAC,CAAC;IACtDhB,cAAc,CAACgB,QAAQ,CAAC;IACxBd,kBAAkB,CAAC,IAAI,CAAC;EAC1B,CAAC;;EAED;EACA,MAAMiB,MAAM,GAAGA,CAAA,KAAM;IACnBZ,YAAY,CAACO,UAAU,CAAC,OAAO,CAAC;IAChCP,YAAY,CAACO,UAAU,CAAC,MAAM,CAAC;IAC/Bd,cAAc,CAAC,IAAI,CAAC;IACpBE,kBAAkB,CAAC,KAAK,CAAC;EAC3B,CAAC;;EAED;EACA,MAAMkB,QAAQ,GAAGA,CAAA,KAAM;IACrB,OAAOb,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;EACtC,CAAC;;EAED;EACA,MAAMa,KAAK,GAAG;IACZtB,WAAW;IACXE,eAAe;IACfE,SAAS;IACTY,KAAK;IACLI,MAAM;IACNC;EACF,CAAC;EAED,oBACE1B,OAAA,CAACC,WAAW,CAAC2B,QAAQ;IAACD,KAAK,EAAEA,KAAM;IAAAxB,QAAA,EAChCA;EAAQ;IAAA0B,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACW,CAAC;AAE3B,CAAC;;AAED;AAAA5B,EAAA,CAnEaF,YAAY;AAAA+B,EAAA,GAAZ/B,YAAY;AAoEzB,OAAO,MAAMgC,OAAO,GAAGA,CAAA,KAAM;EAAAC,GAAA;EAC3B,OAAOrC,UAAU,CAACG,WAAW,CAAC;AAChC,CAAC;AAACkC,GAAA,CAFWD,OAAO;AAAA,IAAAD,EAAA;AAAAG,YAAA,CAAAH,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}