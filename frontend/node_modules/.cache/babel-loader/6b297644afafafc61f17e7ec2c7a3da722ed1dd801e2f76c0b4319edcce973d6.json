{"ast":null,"code":"import React,{useState,useEffect}from'react';import UserModal from'../components/UserModal';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const Dashboard=()=>{const[users,setUsers]=useState([]);const[loading,setLoading]=useState(true);const[roleFilter,setRoleFilter]=useState('All');const[currentUserRole,setCurrentUserRole]=useState('Administrator');// Default to Administrator for demo\nconst[selectedUser,setSelectedUser]=useState(null);const[showModal,setShowModal]=useState(false);// Mock user data (since we're not connecting to backend)\nuseEffect(()=>{const mockUsers=[{id:1,username:'admin',role:'Administrator',lastLogin:'2023-10-15',email:'admin@example.com'},{id:2,username:'johndoe',role:'User',lastLogin:'2023-10-14',email:'john@example.com'},{id:3,username:'janedoe',role:'User',lastLogin:'2023-10-13',email:'jane@example.com'},{id:4,username:'manager1',role:'Manager',lastLogin:'2023-10-12',email:'manager@example.com'},{id:5,username:'support1',role:'Support',lastLogin:'2023-10-11',email:'support@example.com'}];// Simulate API call delay\nsetTimeout(()=>{setUsers(mockUsers);setLoading(false);},800);},[]);// Filter users based on selected role\nconst filteredUsers=roleFilter==='All'?users:users.filter(user=>user.role===roleFilter);// Count users by role\nconst roleCount=role=>users.filter(user=>user.role===role).length;// Function to handle edit action\nconst handleEdit=userId=>{const userToEdit=users.find(user=>user.id===userId);if(userToEdit){setSelectedUser(userToEdit);setShowModal(true);}};// Function to handle save in modal\nconst handleSaveUser=updatedUser=>{setUsers(users.map(user=>user.id===updatedUser.id?updatedUser:user));setShowModal(false);setSelectedUser(null);alert(`User ${updatedUser.username} updated successfully!`);};// Function to handle delete action\nconst handleDelete=userId=>{if(window.confirm('Are you sure you want to delete this user?')){setUsers(users.filter(user=>user.id!==userId));alert(`User deleted successfully!`);}};// Switch between admin and non-admin view (for demo purposes)\nconst toggleUserRole=()=>{setCurrentUserRole(currentUserRole==='Administrator'?'User':'Administrator');};return/*#__PURE__*/_jsxs(\"div\",{className:\"dashboard-container\",children:[/*#__PURE__*/_jsx(\"h1\",{children:\"User Management Dashboard\"}),/*#__PURE__*/_jsx(\"div\",{className:\"role-toggle\",children:/*#__PURE__*/_jsxs(\"button\",{onClick:toggleUserRole,className:\"role-toggle-btn\",children:[\"Currently viewing as: \",currentUserRole,\" (click to toggle)\"]})}),/*#__PURE__*/_jsxs(\"div\",{className:\"dashboard-stats\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"stat-card\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Total Users\"}),/*#__PURE__*/_jsx(\"p\",{children:users.length})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"stat-card\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Admins\"}),/*#__PURE__*/_jsx(\"p\",{children:roleCount('Administrator')})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"stat-card\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Regular Users\"}),/*#__PURE__*/_jsx(\"p\",{children:roleCount('User')})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"stat-card\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Managers\"}),/*#__PURE__*/_jsx(\"p\",{children:roleCount('Manager')})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"stat-card\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Support\"}),/*#__PURE__*/_jsx(\"p\",{children:roleCount('Support')})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"user-list-section\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"user-list-header\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"User List\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"filter-container\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"roleFilter\",children:\"Filter by Role:\"}),/*#__PURE__*/_jsxs(\"select\",{id:\"roleFilter\",value:roleFilter,onChange:e=>setRoleFilter(e.target.value),className:\"role-filter\",children:[/*#__PURE__*/_jsx(\"option\",{value:\"All\",children:\"All Roles\"}),/*#__PURE__*/_jsx(\"option\",{value:\"Administrator\",children:\"Administrator\"}),/*#__PURE__*/_jsx(\"option\",{value:\"User\",children:\"User\"}),/*#__PURE__*/_jsx(\"option\",{value:\"Manager\",children:\"Manager\"}),/*#__PURE__*/_jsx(\"option\",{value:\"Support\",children:\"Support\"})]})]})]}),loading?/*#__PURE__*/_jsx(\"p\",{children:\"Loading users...\"}):/*#__PURE__*/_jsxs(\"table\",{className:\"user-table\",children:[/*#__PURE__*/_jsx(\"thead\",{children:/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"th\",{children:\"ID\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Username\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Email\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Role\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Last Login\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Actions\"})]})}),/*#__PURE__*/_jsx(\"tbody\",{children:filteredUsers.map(user=>/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"td\",{children:user.id}),/*#__PURE__*/_jsx(\"td\",{children:user.username}),/*#__PURE__*/_jsx(\"td\",{children:user.email||'N/A'}),/*#__PURE__*/_jsx(\"td\",{children:user.role}),/*#__PURE__*/_jsx(\"td\",{children:user.lastLogin}),/*#__PURE__*/_jsxs(\"td\",{children:[/*#__PURE__*/_jsx(\"button\",{className:\"edit-btn\",onClick:()=>handleEdit(user.id),children:\"Edit\"}),currentUserRole==='Administrator'&&/*#__PURE__*/_jsx(\"button\",{className:\"delete-btn\",onClick:()=>handleDelete(user.id),children:\"Delete\"})]})]},user.id))})]}),filteredUsers.length===0&&!loading&&/*#__PURE__*/_jsx(\"p\",{className:\"no-results\",children:\"No users found with the selected role.\"})]}),showModal&&/*#__PURE__*/_jsx(UserModal,{user:selectedUser,onClose:()=>{setShowModal(false);setSelectedUser(null);},onSave:handleSaveUser})]});};export default Dashboard;","map":{"version":3,"names":["React","useState","useEffect","UserModal","jsx","_jsx","jsxs","_jsxs","Dashboard","users","setUsers","loading","setLoading","roleFilter","setRoleFilter","currentUserRole","setCurrentUserRole","selectedUser","setSelectedUser","showModal","setShowModal","mockUsers","id","username","role","lastLogin","email","setTimeout","filteredUsers","filter","user","roleCount","length","handleEdit","userId","userToEdit","find","handleSaveUser","updatedUser","map","alert","handleDelete","window","confirm","toggleUserRole","className","children","onClick","htmlFor","value","onChange","e","target","onClose","onSave"],"sources":["C:/Users/marti/Downloads/user-management-system-feature-backend/user-management-system-feature-backend/backend/frontend/src/pages/Dashboard.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport UserModal from '../components/UserModal';\r\n\r\nconst Dashboard = () => {\r\n  const [users, setUsers] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [roleFilter, setRoleFilter] = useState('All');\r\n  const [currentUserRole, setCurrentUserRole] = useState('Administrator'); // Default to Administrator for demo\r\n  const [selectedUser, setSelectedUser] = useState(null);\r\n  const [showModal, setShowModal] = useState(false);\r\n\r\n  // Mock user data (since we're not connecting to backend)\r\n  useEffect(() => {\r\n    const mockUsers = [\r\n      { id: 1, username: 'admin', role: 'Administrator', lastLogin: '2023-10-15', email: 'admin@example.com' },\r\n      { id: 2, username: 'johndoe', role: 'User', lastLogin: '2023-10-14', email: 'john@example.com' },\r\n      { id: 3, username: 'janedoe', role: 'User', lastLogin: '2023-10-13', email: 'jane@example.com' },\r\n      { id: 4, username: 'manager1', role: 'Manager', lastLogin: '2023-10-12', email: 'manager@example.com' },\r\n      { id: 5, username: 'support1', role: 'Support', lastLogin: '2023-10-11', email: 'support@example.com' }\r\n    ];\r\n    \r\n    // Simulate API call delay\r\n    setTimeout(() => {\r\n      setUsers(mockUsers);\r\n      setLoading(false);\r\n    }, 800);\r\n  }, []);\r\n\r\n  // Filter users based on selected role\r\n  const filteredUsers = roleFilter === 'All' \r\n    ? users \r\n    : users.filter(user => user.role === roleFilter);\r\n\r\n  // Count users by role\r\n  const roleCount = (role) => users.filter(user => user.role === role).length;\r\n\r\n  // Function to handle edit action\r\n  const handleEdit = (userId) => {\r\n    const userToEdit = users.find(user => user.id === userId);\r\n    if (userToEdit) {\r\n      setSelectedUser(userToEdit);\r\n      setShowModal(true);\r\n    }\r\n  };\r\n\r\n  // Function to handle save in modal\r\n  const handleSaveUser = (updatedUser) => {\r\n    setUsers(users.map(user => \r\n      user.id === updatedUser.id ? updatedUser : user\r\n    ));\r\n    setShowModal(false);\r\n    setSelectedUser(null);\r\n    alert(`User ${updatedUser.username} updated successfully!`);\r\n  };\r\n\r\n  // Function to handle delete action\r\n  const handleDelete = (userId) => {\r\n    if (window.confirm('Are you sure you want to delete this user?')) {\r\n      setUsers(users.filter(user => user.id !== userId));\r\n      alert(`User deleted successfully!`);\r\n    }\r\n  };\r\n\r\n  // Switch between admin and non-admin view (for demo purposes)\r\n  const toggleUserRole = () => {\r\n    setCurrentUserRole(currentUserRole === 'Administrator' ? 'User' : 'Administrator');\r\n  };\r\n\r\n  return (\r\n    <div className=\"dashboard-container\">\r\n      <h1>User Management Dashboard</h1>\r\n      \r\n      {/* Demo toggle for admin/non-admin view */}\r\n      <div className=\"role-toggle\">\r\n        <button onClick={toggleUserRole} className=\"role-toggle-btn\">\r\n          Currently viewing as: {currentUserRole} (click to toggle)\r\n        </button>\r\n      </div>\r\n      \r\n      <div className=\"dashboard-stats\">\r\n        <div className=\"stat-card\">\r\n          <h3>Total Users</h3>\r\n          <p>{users.length}</p>\r\n        </div>\r\n        <div className=\"stat-card\">\r\n          <h3>Admins</h3>\r\n          <p>{roleCount('Administrator')}</p>\r\n        </div>\r\n        <div className=\"stat-card\">\r\n          <h3>Regular Users</h3>\r\n          <p>{roleCount('User')}</p>\r\n        </div>\r\n        <div className=\"stat-card\">\r\n          <h3>Managers</h3>\r\n          <p>{roleCount('Manager')}</p>\r\n        </div>\r\n        <div className=\"stat-card\">\r\n          <h3>Support</h3>\r\n          <p>{roleCount('Support')}</p>\r\n        </div>\r\n      </div>\r\n      \r\n      <div className=\"user-list-section\">\r\n        <div className=\"user-list-header\">\r\n          <h2>User List</h2>\r\n          <div className=\"filter-container\">\r\n            <label htmlFor=\"roleFilter\">Filter by Role:</label>\r\n            <select \r\n              id=\"roleFilter\" \r\n              value={roleFilter} \r\n              onChange={(e) => setRoleFilter(e.target.value)}\r\n              className=\"role-filter\"\r\n            >\r\n              <option value=\"All\">All Roles</option>\r\n              <option value=\"Administrator\">Administrator</option>\r\n              <option value=\"User\">User</option>\r\n              <option value=\"Manager\">Manager</option>\r\n              <option value=\"Support\">Support</option>\r\n            </select>\r\n          </div>\r\n        </div>\r\n        \r\n        {loading ? (\r\n          <p>Loading users...</p>\r\n        ) : (\r\n          <table className=\"user-table\">\r\n            <thead>\r\n              <tr>\r\n                <th>ID</th>\r\n                <th>Username</th>\r\n                <th>Email</th>\r\n                <th>Role</th>\r\n                <th>Last Login</th>\r\n                <th>Actions</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {filteredUsers.map(user => (\r\n                <tr key={user.id}>\r\n                  <td>{user.id}</td>\r\n                  <td>{user.username}</td>\r\n                  <td>{user.email || 'N/A'}</td>\r\n                  <td>{user.role}</td>\r\n                  <td>{user.lastLogin}</td>\r\n                  <td>\r\n                    <button \r\n                      className=\"edit-btn\"\r\n                      onClick={() => handleEdit(user.id)}\r\n                    >\r\n                      Edit\r\n                    </button>\r\n                    {currentUserRole === 'Administrator' && (\r\n                      <button \r\n                        className=\"delete-btn\"\r\n                        onClick={() => handleDelete(user.id)}\r\n                      >\r\n                        Delete\r\n                      </button>\r\n                    )}\r\n                  </td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </table>\r\n        )}\r\n        {filteredUsers.length === 0 && !loading && (\r\n          <p className=\"no-results\">No users found with the selected role.</p>\r\n        )}\r\n      </div>\r\n\r\n      {/* User Edit Modal */}\r\n      {showModal && (\r\n        <UserModal \r\n          user={selectedUser}\r\n          onClose={() => {\r\n            setShowModal(false);\r\n            setSelectedUser(null);\r\n          }}\r\n          onSave={handleSaveUser}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Dashboard; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}